@page "/login"

<div class="login-container">
    <div class="row justify-content-center align-items-start h-100">

        <div class="login-form">

            <EditForm Model="@_loginUserDto" OnValidSubmit="Login">

                @if (errorText != string.Empty)
                {
                    <span class="text-danger">@errorText</span>
                    <br />
                }

                <div class="form-group">
                    <input @bind-value="_loginUserDto.EmailAddress" class="form-control" type="text" placeholder="Email Address" />
                </div>
                <br />
                <div class="form-group">
                    <input @bind-value="_loginUserDto.Password" class="form-control" type="password" placeholder="Password" />
                </div>
                <br />
                <div class="form-group">
                    <button class="btn btn-success btn-sozluk">Endeavor to Login</button>
                </div>

            </EditForm>

        </div>

    </div>
</div>



@code {
    [Inject]
    IIdentityService _identityService { get; set; }
    [Inject]
    NavigationManager _navigationManager { get; set; }

    private string errorText = "";

    private LoginUserDto _loginUserDto = new();
    

    public async Task Login()
    {
        try
        {
            var response =  await _identityService.Login(_loginUserDto);
            
            if (response)
            {
                errorText = "";
                _navigationManager.NavigateTo("/");
            }
            else
            {
                errorText = "There is error";
            }
        }
        catch(Exception exception)
        {
            errorText = exception.Message;
            throw;
        }
    }
    
}