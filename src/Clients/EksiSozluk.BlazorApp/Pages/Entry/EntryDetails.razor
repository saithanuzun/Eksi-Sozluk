@page "/entry/{id:guid}"

@if (entry is not null)
{
    <br />
    <EntryViewerComponent Entry="@entry" />
    <br />

    if (comments is not null)
    {
        foreach (var comment in comments.Results)
        {
            <EntryCommentViewerComponent 
                EntryComment="@comment"
            />
        }
    }

    <br />
    // TODO Pagination Component will be here

    <AuthorizeView>
        <Authorized>
            <br/>
            <br/>

            <CreateEntryCommentComponent 
                EntryId="@entry.Id"
                EntrySubject="@entry.Subject"
                OnClicked="@OnCommentCreate"
            />

        </Authorized>
    </AuthorizeView>
}

@code {

    [Parameter]
    public Guid id { get; set; }

    [Inject]
    IEntryService entryService { get; set; }


    private EntryDetailsDvo entry = new();
    private PagedViewModel<EntryCommentsDvo> comments = new();
    private int currentPage = 1;

    protected override async Task OnParametersSetAsync()
    {
        entry = await entryService.GetEntryDetail(id);

        await RefreshComments(1);

        currentPage = comments.PageInfo.CurrentPage;
    }

    public async Task OnCommentCreate(CreateEntryCommentDto command)
    {
        await entryService.CreateEntryComment(command);
        await RefreshComments(currentPage);
    }

    private async Task RefreshComments(int pageNumber)
    {
        comments = await entryService.GetEntryComments(entry.Id, pageNumber, 10);
    }
}